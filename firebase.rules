rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /listings/{listingId} {
      // Allow reading listings for everyone
      allow read: if true;

      // Allow creating listings only for authenticated users
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;

      // Allow updates/deletes only by the listing owner
      allow update, delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }

    match /adoptionRequests/{requestId} {
      // Allow reading requests that user is involved with
      allow read: if true;

      // Allow creating requests for authenticated users
      allow create: if request.auth != null;

      // Allow updates by owner or requester
      allow update: if request.auth != null && (
        request.auth.uid == resource.data.userId || 
        request.auth.uid == resource.data.ownerId
      );

      // Allow batch updates when approving requests
      allow update: if request.auth != null && 
        (resource.data.ownerId == request.auth.uid || 
         resource.data.userId == request.auth.uid);
    }

    match /users/{userId} {
      // Allow public reading of user profiles
      allow read: if true;

      // Allow profile updates only by the owner
      allow write: if request.auth != null && 
        request.auth.uid == userId;
    }

    match /chats/{chatId} {
      // Allow chat access to participants
      allow create: if request.auth != null;
      allow read, write: if request.auth != null && (
        resource == null || // Allow initial creation
        request.auth.uid in resource.data.participants
      );

      // Allow access to chat messages for participants
      match /messages/{messageId} {
        allow create: if request.auth != null;
        allow read, write: if request.auth != null && 
          get(/databases/$(database)/documents/chats/$(chatId)).data.participants[request.auth.uid] == true;
      }
    }
  }
}