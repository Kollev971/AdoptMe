rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return request.auth.token.email == string(get(/databases/$(database)/documents/env/admin).data.adminEmail) || request.auth.token.isAdmin == true;
    }

    function isSignedIn() {
      return request.auth != null;
    }

    function isUserInChat(chatId) {
      let chat = get(/databases/$(database)/documents/chats/$(chatId));
      return chat != null && 
        (chat.data.participants is map ? 
          chat.data.participants[request.auth.uid] != null : 
          chat.data.participants.hasAny([request.auth.uid]));
    }

    match /listings/{listingId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && (
        resource.data.userId == request.auth.uid || isAdmin()
      );
    }

    match /chats/{chatId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && isUserInChat(chatId);

      match /messages/{messageId} {
        allow read: if isSignedIn() && isUserInChat(chatId);
        allow create: if isSignedIn() && isUserInChat(chatId);
        allow update, delete: if isSignedIn() && (
          resource.data.senderId == request.auth.uid || isAdmin()
        );
      }

      match /typing/{userId} {
        allow read, write: if isSignedIn() && isUserInChat(chatId);
      }
    }

    match /users/{userId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (request.auth.uid == userId || isAdmin());

      match /private/{document=**} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
    }

    match /ratings/{ratingId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && (
        resource.data.ratingUserId == request.auth.uid || isAdmin()
      );
    }
    
    match /adoptionRequests/{requestId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && (
        resource.data.ownerId == request.auth.uid || 
        resource.data.userId == request.auth.uid ||
        isAdmin()
      );
    }

    match /sentRequests/{requestId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && (
        resource.data.ownerId == request.auth.uid || 
        resource.data.userId == request.auth.uid ||
        isAdmin()
      );
    }

    match /env/admin {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
  }
}
