
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    match /listings/{listingId} {
      allow read: if true;
      
      allow create: if request.auth != null && 
                   request.resource.data.userId == request.auth.uid &&
                   request.resource.data.createdAt is timestamp;
      
      allow update, delete: if request.auth != null && 
                           resource.data.userId == request.auth.uid;
    }

    match /adoptionRequests/{requestId} {
      allow read: if true;
      
      allow create: if request.auth != null;
      
      allow update: if request.auth != null && (
        // Allow listing owner to approve/reject requests
        get(/databases/$(database)/documents/listings/$(resource.data.listingId)).data.userId == request.auth.uid ||
        // Allow requester to update their own request
        resource.data.userId == request.auth.uid
      );

      allow delete: if request.auth != null && 
                   resource.data.userId == request.auth.uid;
    }

    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && 
                   request.auth.uid == userId;
    }

    match /chats/{chatId} {
      allow create: if request.auth != null;
      
      allow read, write: if request.auth != null && (
        request.auth.uid in resource.data.participants
      );
    }

    match /chats/{chatId}/messages/{messageId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
    }
  }
}
