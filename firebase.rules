rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /listings/{listingId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /chats/{chatId} {
      // Allow read/write if user is participant in chat
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/chats/$(chatId)).data.participants.hasAny([request.auth.uid]);

      // Allow creating new chats
      allow create: if request.auth != null;

      match /messages/{messageId} {
        allow read, write: if request.auth != null && 
          get(/databases/$(database)/documents/chats/$(chatId)).data.participants.hasAny([request.auth.uid]);
      }

      match /typing/{userId} {
        allow read: if request.auth != null && 
          get(/databases/$(database)/documents/chats/$(chatId)).data.participants.hasAny([request.auth.uid]);
        allow write: if request.auth != null && userId == request.auth.uid;
      }
    }

    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == userId;
    }
  }
}