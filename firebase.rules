rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /listings/{listingId} {
      // Allow reading listings for everyone
      allow read: if true;

      // Allow creating listings only for authenticated users
      allow create: if request.auth != null 
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.createdAt is string;

      // Allow updates/deletes only by the listing owner
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /adoptionRequests/{requestId} {
      // Allow reading requests
      allow read: if true;

      // Allow creating requests for authenticated users
      allow create: if request.auth != null;

      // Allow updates only by the involved parties (owner or requester)
      allow update: if request.auth != null && (
        resource.data.userId == request.auth.uid || 
        resource.data.ownerId == request.auth.uid
      );
    }

    match /users/{userId} {
      // Allow public reading of user profiles
      allow read: if true;

      // Allow profile updates only by the owner
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    match /chats/{chatId} {
      // Allow access only to chat participants
      allow read, write: if request.auth != null && (
        request.auth.uid in resource.data.participants.keys() ||
        (
          request.resource != null &&
          request.auth.uid in request.resource.data.participants.keys()
        )
      );

      // Messages subcollection
      match /messages/{messageId} {
        allow read, write: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants.keys();
      }
    }
  }
}