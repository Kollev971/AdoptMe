rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /listings/{listingId} {
      allow read: if true;
      allow create: if request.auth != null && 
                    request.resource.data.userId == request.auth.uid && 
                    request.resource.data.createdAt is timestamp;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /adoptionRequests/{requestId} {
      allow read: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        resource.data.ownerId == request.auth.uid
      );
      allow create: if request.auth != null;
      allow update: if request.auth != null && (
        resource.data.ownerId == request.auth.uid ||
        resource.data.userId == request.auth.uid
      );
      allow delete: if request.auth != null && resource.data.ownerId == request.auth.uid;
    }
    
    match /sentRequests/{requestId} {
      allow read: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        resource.data.ownerId == request.auth.uid
      );
      allow create: if request.auth != null;
      allow update: if request.auth != null && (
        resource.data.ownerId == request.auth.uid ||
        resource.data.userId == request.auth.uid
      );
      allow delete: if request.auth != null && resource.data.ownerId == request.auth.uid;
    }

    match /chats/{chatId} {
      allow create: if request.auth != null;
      allow read, write: if request.auth != null && (
        resource == null || 
        resource.data.participants[request.auth.uid] == true
      );

      match /messages/{messageId} {
        allow read, write: if request.auth != null && 
          get(/databases/$(database)/documents/chats/$(chatId)).data.participants[request.auth.uid] == true;
      }
    }

    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}